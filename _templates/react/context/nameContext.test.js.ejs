---
to: src/contexts/<%= h.inflection.camelize(name, true) %>Context/<%= h.inflection.camelize(name, true) %>Context.test.js
---
import { createTestApi } from "utils/useApi";
import <%= h.inflection.camelize(name, true) %>Factory from "./<%= h.inflection.camelize(name, true) %>Factory";

/**
 * constant default value
 */
const defaultValue = {
    value: 1
};

/**
 * initialize the testApi in a non-react environment
 * Remember, we are only checking if it works, not if its in React
 */
const test<%= h.inflection.classify(name) %> = createTestApi(<%= h.inflection.camelize(name, true) %>Factory, defaultValue);
describe("<%= h.inflection.camelize(name, true) %>Context", () => {
  it("returns initial value", () => {
    expect(test<%= h.inflection.classify(name) %>.api.getValue()).toEqual(defaultValue.value);
  });

  it("can change value", () => {
    test<%= h.inflection.classify(name) %>.api.setValue(2);  
    expect(test<%= h.inflection.classify(name) %>.api.getValue()).toEqual(2);
  });

});
